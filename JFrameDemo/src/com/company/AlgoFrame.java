package com.company;import javax.swing.*;import java.awt.*;public class AlgoFrame extends JFrame {    private int canvasWidth;    private int canvasHeight;    private Circle[] circles;    public AlgoFrame(String title,int canvasWidth, int canvasHeight){        super(title);        this.canvasWidth=canvasWidth;        this.canvasHeight=canvasHeight;        JPanel canvas=new AlgoCanvas();        setContentPane(canvas);        pack();        setSize(canvasWidth,canvasHeight);        setResizable(false);        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        setVisible(true);    }    public AlgoFrame(String title){        this(title,1024,768);    }    public int getCanvasWidth() {        return canvasWidth;    }    public int getCanvasHeight() {        return canvasHeight;    }    public void render(Circle[] circles){        this.circles=circles;        repaint();    }    private class AlgoCanvas extends JPanel{        public AlgoCanvas(){            super(true);        }        @Override        public void paintComponent(Graphics g){            super.paintComponent(g);            Graphics2D g2d=(Graphics2D)g;            //抗锯齿            RenderingHints hints=new RenderingHints(                    RenderingHints.KEY_ALPHA_INTERPOLATION,                    RenderingHints.VALUE_ANTIALIAS_ON);            AlgoVisHelper.setStrokeWidth(g2d,1);            AlgoVisHelper.setColor(g2d,Color.getHSBColor(160,23,80));            for (Circle circle:circles)                AlgoVisHelper.strokeCircle(g2d,circle.x,circle.y,circle.getR());        }        @Override        public Dimension getPreferredSize(){            return new Dimension(canvasWidth,canvasHeight);        }    }}